杨保华 Docker技术入门与实战
* Docker入门
** 初识Docker
   可以简单的将Docker容器理解为一种沙盒，每个容器内运行一个应用，不同的容器互相隔离，容器之间可以建立通信机制。容器的创建和停止都十分快速，容器自身对资源的需求也十分有限，远远低于虚拟机。
   
   与传统虚拟机比较，Docker容器快，对系统资源需求少，一台主机可以运行数千个Docker容器,docker通过git的操作管理减少学习成本，通过Dockerfile配置文件来灵活自动化创建和部署

   传统方式是硬件层面实现虚拟化，需要有额外的虚拟机管理应用和虚拟机操作系统层，Docker容器是操作系统层面上实现的虚拟化，直接复用本地主机的操作系统，因此更加轻量级

   [[http://7xpyfe.com1.z0.glb.clouddn.com/blog/20171018/113219426.png]]
  
* Docker核心概念
   1. Image
   2. Container

      镜像自身是只读的，容器从镜像启动的时候，Docker会在镜像的最上层创建一个可写层，镜像本身将保持不变
   3. Repository

      Docker集中存放镜像文件的场所

      目前最大的公开仓库是Docker Hub 国内 Docker Pool

      Registry 注册服务器包含众多Repository

** Docker Image
   - sudo docker pull ubuntu  
     
     download ubuntu image  and create container 
   - sudo docker run -t -i ubuntu /bin/bash
   - sudo docker images
     
     查看本地镜像
   - sudo docker inspect 747cb2d60bbe

     查看镜像信息
   - sudo docker search mysql

     search images
   - sudo docker rmi ubuntu:latest
     
     use tag to remove image

     image 创建的容器存在的时候，是无法删除删除的 -f 强制删除
   - docker run ubuntu:16.04 echo 'hello mm'
   - docker ps -a 

     删除images需要先删除容器 : docker rm 004
   - create docker image
     1. 基于已有image的容器创建
        - docker commit

          -a 作者 -m  提交信息 -p 暂停提交 

          docker commit -m "add a test" -a 'manue1' 836  查看本地镜像会发现多出一个
     2. 基于本地模版导入
     3. 基于Dockerfile创建
   - dacker save / docker load 
     
     docker save -o ubuntu-16.04.tar ubuntu:latest

     docker load --input ubuntu-16.04.tar
   - docker tag 9f2  test:u_test
     利用id添加tag
   - docker push
     push 需要先修改本地仓库name为远程仓库名
     - docker tag test:u_test manue1sec/test:u_test
     - docker push manue1sec/test
** Docker Container
   - create docker container
     
     docker create -it ubuntu

     docker start d3e

     docker run -it ubuntu /bin/bash  创建并启动容器，-t启动一个虚拟终端，-i保持终端 -d 在后台守护运行
   - docker stop ce5 
     
     docker kill ce5 

     docker ps -a -q 停止状态的容器
   - into container

     docker attach 18a
    
     docker exec -ti /bin/bash  (推荐)
   - remove container

     docker rm 18a
   - docker export / import

     导入导出容器

     docker export 18a > ubuntu_container.tar  作为镜像

     docker import a.tar
   - exit

   
* Docker use note
** Docker install
   1. 图解Docker
      [[http://7xpyfe.com1.z0.glb.clouddn.com/blog/20170607/115341763.png]]
   2. [[https://docs.docker.com/engine/installation/][官网文档]] 有详细说明
      国内网速很慢，采用了阿里云的[[https://yq.aliyun.com/articles/7695][镜像源]]
      : curl -sSL http://acs-public-mirror.oss-cn-hangzhou.aliyuncs.com/docker-engine/intranet | sh -

      [[http://7xpyfe.com1.z0.glb.clouddn.com/blog/20170607/131800763.png]]
   
** Docker command
   - service docker start/stop
   - docker rmi ventz/cif
   - docker images 命令查看本地的镜像列表
   - docker inspect cif 查看指定镜像的详细信息
   - docker ps -l 查看我们正在运行的容器 -l 最后状态  
   - docker exec -it 9121af6cabed /bin/bash
   - docker stop cif 停止容器
   - docker rm -f cif  运行冲突 remove it using
   - docker run --name cif -d -p 5000:5000 csirtgadgets/cif
         
* common problem
  1. ImportError: No module named apt_pkg
     安装docker 执行 sudo add-apt-repository 的时候报错
     Solve it by this:
     /usr/lib/python3/dist-packages# cp apt_pkg.cpython-34m-x86_64-linux-gnu.so apt_pkg.so